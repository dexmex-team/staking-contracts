/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { StakingDexm } from "../StakingDexm";

export class StakingDexm__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(dexmex: string, overrides?: Overrides): Promise<StakingDexm> {
    return super.deploy(dexmex, overrides || {}) as Promise<StakingDexm>;
  }
  getDeployTransaction(
    dexmex: string,
    overrides?: Overrides
  ): TransactionRequest {
    return super.getDeployTransaction(dexmex, overrides || {});
  }
  attach(address: string): StakingDexm {
    return super.attach(address) as StakingDexm;
  }
  connect(signer: Signer): StakingDexm__factory {
    return super.connect(signer) as StakingDexm__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): StakingDexm {
    return new Contract(address, _abi, signerOrProvider) as StakingDexm;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "dexmex",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Deposit",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "EmergencyWithdraw",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Withdraw",
    type: "event",
  },
  {
    inputs: [],
    name: "DEXM",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "claim",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "deposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "emergencyWithdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "totalRewards",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "userInfo",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "rewardDebt",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051610bec380380610bec83398101604081905261002f916100b1565b61003833610061565b60018055600280546001600160a01b0319166001600160a01b03929092169190911790556100df565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156100c2578081fd5b81516001600160a01b03811681146100d8578182fd5b9392505050565b610afe806100ee6000396000f3fe6080604052600436106100955760003560e01c806385e068681161005957806385e06868146101765780638da5cb5b146101ae578063b6b55f25146101cc578063db2e21bc146101ec578063f2fde38b1461020157600080fd5b80630e15561a146100ba5780631959a002146100e35780632e1a7d4d1461012c5780634e71d92d1461014c578063715018a61461016157600080fd5b366100b5576005546100a79034610221565b6005556100b334610234565b005b600080fd5b3480156100c657600080fd5b506100d060055481565b6040519081526020015b60405180910390f35b3480156100ef57600080fd5b506101176100fe366004610996565b6003602052600090815260409020805460019091015482565b604080519283526020830191909152016100da565b34801561013857600080fd5b506100b36101473660046109dd565b6102e7565b34801561015857600080fd5b506100b36104a6565b34801561016d57600080fd5b506100b3610559565b34801561018257600080fd5b50600254610196906001600160a01b031681565b6040516001600160a01b0390911681526020016100da565b3480156101ba57600080fd5b506000546001600160a01b0316610196565b3480156101d857600080fd5b506100b36101e73660046109dd565b6105bf565b3480156101f857600080fd5b506100b3610731565b34801561020d57600080fd5b506100b361021c366004610996565b61080e565b600061022d8284610a44565b9392505050565b6002546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a082319060240160206040518083038186803b15801561027857600080fd5b505afa15801561028c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102b091906109f5565b9050806102bb575050565b6102e06102d7826102d18564e8d4a510006108d9565b906108e5565b60045490610221565b6004555050565b600260015414156103135760405162461bcd60e51b815260040161030a90610a0d565b60405180910390fd5b6002600155336000908152600360205260409020805482111561036c5760405162461bcd60e51b81526020600482015260116024820152700eed2e8d0c8e4c2ee40e8dede40daeac6d607b1b604482015260640161030a565b600061039e826001015461039864e8d4a510006102d160045487600001546108d990919063ffffffff16565b906108f1565b905080156103b0576103b033826108fd565b821561044a5781546103c290846108f1565b825560025460405163a9059cbb60e01b8152336004820152602481018590526001600160a01b039091169063a9059cbb90604401602060405180830381600087803b15801561041057600080fd5b505af1158015610424573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061044891906109bd565b505b60045482546104639164e8d4a51000916102d1916108d9565b600183015560405183815233907f884edad9ce6fa2440d8a54cc123490eb96d2768479d49ff9c7366125a94243649060200160405180910390a250506001805550565b600260015414156104c95760405162461bcd60e51b815260040161030a90610a0d565b6002600155336000908152600360205260409020546104e757610553565b3360009081526003602052604081206001810154600454825492939261051d92916103989164e8d4a51000916102d191906108d9565b9050801561052f5761052f33826108fd565b60045482546105489164e8d4a51000916102d1916108d9565b826001018190555050505b60018055565b6000546001600160a01b031633146105b35760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161030a565b6105bd6000610946565b565b600260015414156105e25760405162461bcd60e51b815260040161030a90610a0d565b600260015533600090815260036020526040902080541561063d576000610629826001015461039864e8d4a510006102d160045487600001546108d990919063ffffffff16565b9050801561063b5761063b33826108fd565b505b6002546040516323b872dd60e01b8152336004820152306024820152604481018490526001600160a01b03909116906323b872dd90606401602060405180830381600087803b15801561068f57600080fd5b505af11580156106a3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106c791906109bd565b5080546106d49083610221565b8082556004546106ef9164e8d4a51000916102d191906108d9565b600182015560405182815233907fe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c9060200160405180910390a2505060018055565b3360008181526003602052604080822080548382556001820193909355600254915163a9059cbb60e01b8152600481019490945260248401839052926001600160a01b039091169063a9059cbb90604401602060405180830381600087803b15801561079c57600080fd5b505af11580156107b0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107d491906109bd565b5060405181815233907f5fafa99d0643513820be26656b45130b01e1c03062e1266bf36f88cbd3bd96959060200160405180910390a25050565b6000546001600160a01b031633146108685760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161030a565b6001600160a01b0381166108cd5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161030a565b6108d681610946565b50565b600061022d8284610a7c565b600061022d8284610a5c565b600061022d8284610a9b565b478181101561090a578091505b6040516001600160a01b0384169083156108fc029084906000818181858888f19350505050158015610940573d6000803e3d6000fd5b50505050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156109a7578081fd5b81356001600160a01b038116811461022d578182fd5b6000602082840312156109ce578081fd5b8151801515811461022d578182fd5b6000602082840312156109ee578081fd5b5035919050565b600060208284031215610a06578081fd5b5051919050565b6020808252601f908201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604082015260600190565b60008219821115610a5757610a57610ab2565b500190565b600082610a7757634e487b7160e01b81526012600452602481fd5b500490565b6000816000190483118215151615610a9657610a96610ab2565b500290565b600082821015610aad57610aad610ab2565b500390565b634e487b7160e01b600052601160045260246000fdfea26469706673582212206368e574c04fe6cd10b027eaefa3bdee7ac3cb2d5cfe4c1e15797b5986fa9b7164736f6c63430008040033";
